!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).GiphyAPI=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function _handleErr(err,callback){if(callback)return callback(err);if(promisesExist)return Promise.reject(err);throw new Error(err)}var queryStringify=require("./util/queryStringify"),httpService=require("./util/http"),promisesExist="undefined"!=typeof Promise,GiphyAPI=function(options){if("string"==typeof options||void 0===options||null===options)this.apiKey=options||"dc6zaTOxFJmzC",options={};else{if("object"!=typeof options)throw new Error("Invalid options passed to giphy-api");this.apiKey=options.apiKey||"dc6zaTOxFJmzC"}this.https=options.https,this.timeout=options.timeout||3e4};GiphyAPI.prototype={search:function(options,callback){return options?this._request({api:options.api||"gifs",endpoint:"search",query:"string"==typeof options?{q:options}:options},callback):_handleErr("Search phrase cannot be empty.",callback)},id:function(id,callback){var idIsArr=Array.isArray(id);return!id||idIsArr&&0===id.length?_handleErr("Id required for id API call",callback):(idIsArr&&(id=id.join()),this._request({api:"gifs",query:{ids:id}},callback))},translate:function(options,callback){return options?this._request({api:options.api||"gifs",endpoint:"translate",query:"string"==typeof options?{s:options}:options},callback):_handleErr("Translate phrase cannot be empty.",callback)},random:function(options,callback){var reqOptions={api:(options?options.api:null)||"gifs",endpoint:"random"};return"string"==typeof options?reqOptions.query={tag:options}:"object"==typeof options?reqOptions.query=options:"function"==typeof options&&(callback=options),this._request(reqOptions,callback)},trending:function(options,callback){var reqOptions={endpoint:"trending"};return reqOptions.api=(options?options.api:null)||"gifs",options&&delete options.api,"object"==typeof options&&0!==Object.keys(options).length?reqOptions.query=options:"function"==typeof options&&(callback=options),this._request(reqOptions,callback)},_request:function(options,callback){if(!callback&&!promisesExist)throw new Error("Callback must be provided if promises are unavailable");var endpoint="";options.endpoint&&(endpoint="/"+options.endpoint);var query,self=this;if(void 0!==options.query&&"object"==typeof options.query){if(0===Object.keys(options.query).length)return callback?callback(new Error("Options object should not be empty")):Promise.reject(new Error("Options object should not be empty"));options.query.api_key=this.apiKey,query=queryStringify(options.query)}else query=queryStringify({api_key:self.apiKey});var httpOptions={request:{host:"api.giphy.com",path:"/v1/"+options.api+endpoint+query},https:this.https,timeout:this.timeout,fmt:options.query&&options.query.fmt},makeRequest=function(resolve,reject){httpService.get(httpOptions,resolve,reject)};if(!callback){if(!promisesExist)throw new Error("Callback must be provided unless Promises are available");return new Promise(function(resolve,reject){makeRequest(resolve,reject)})}makeRequest(function(res){callback(null,res)},function(err){callback(err)})}},module.exports=function(apiKey,options){return new GiphyAPI(apiKey,options)}},{"./util/http":2,"./util/queryStringify":3}],2:[function(require,module,exports){exports.get=function(options,resolve,reject){var request=options.request,timeout=options.timeout,fmt=options.fmt,timerId=setTimeout(function(){reject(new Error("Timeout while fetching asset"))},timeout),xhr=new XMLHttpRequest;xhr.withCredentials=!1;var onFail=function(err){clearTimeout(timerId),err=err||new Error("Giphy API request failed!"),reject(err)};xhr.addEventListener("error",onFail),xhr.addEventListener("abort",onFail),xhr.addEventListener("load",function(){clearTimeout(timerId);var body=xhr.response;"html"!==fmt&&(body=JSON.parse(body)),resolve(body)});var url=(options.https?"https":"http")+"://"+request.host+request.path;xhr.open("GET",url,!0),xhr.send()}},{}],3:[function(require,module,exports){var has=Object.prototype.hasOwnProperty;module.exports=function(obj){var pairs=[];for(var key in obj)has.call(obj,key)&&pairs.push(encodeURIComponent(key)+"="+encodeURIComponent(obj[key]));return pairs.length?"?"+pairs.join("&"):""}},{}]},{},[1])(1)});